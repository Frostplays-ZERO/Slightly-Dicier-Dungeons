Name,Description,Size,Script: On Execute,Gadget,Slots,NEED TOTAL?,Category,Colour,Upgrade,Weaken,Alternate Status Trigger,SFX,Uses?,Cast Backwards?,Single use?,Parallel Universe,Special?,Error Immune,Show Gold,Appears For Parts,Hide Reuseable,Witch Spell,Script: Before Combat,Script: After Combat,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: Before execute,Script: On Snap,Script: On Fury
Crystal Shard,Do [sword]<triple> damage | [gray](once per prep),1,attack(d * 3);,Fury,MAX4,,MAGIC,RED,change_power,change_power,,_damage,0,NO,YES,NO,NO,NO,NO,NO,NO,2,,,,,,,,,,
Crystal Shard_upgraded,Do [sword]<triple> damage | [gray](once per prep),1,attack(d * 3);,Fury,NORMAL,,MAGIC,RED,,,,_damage,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Crystal Shard_downgraded,Do [sword]<double> damage | [gray](once per prep),1,attack(d * 2);,Fury,MAX4,,MAGIC,RED,,,,_damage,0,NO,YES,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frame Advance,[ice]Freeze yourself,1,inflictself(ICE[;] 1);,Refrigerator,EVEN,,ITEMS,BRIGHTCYAN,change_power,complicate,,_ice,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Frame Advance_upgraded,[ice]Freeze yourself|[grey](Reuseable),1,inflictself(ICE[;] 1);,Refrigerator,EVEN,,ITEMS,BRIGHTCYAN,,,,_ice,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Jade Vault,Contains a powerful item,2,var item=actualdice[0].basevalue; if(item==1){ giveequipment(~Jade Calculator~[;]true[;]false[;]e); } if(item==2){ giveequipment(~Jade Machine~[;] true[;] false[;] e); } if(item==3){ giveequipment(~Jade Blade~[;] true[;] false[;] e); } if(item==4){ giveequipment(~Jade Skull~[;] true[;] false[;] e); } if(item==5){ giveequipment(~Jade Pendant~[;] true[;] false[;] e); } if(item==6){ giveequipment(~Jade Clock~[;] true[;] false[;] e); },Magic Six,NORMAL|NORMAL|NORMAL|NORMAL,16,MAGIC,BLACK,change_power,change_power,,useitem,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Vault_upgraded,Contains a more | powerful item,2,var item=actualdice[0].basevalue; if(item==1){ giveequipment(~Jade Calculator+~[;] true[;] false[;] e); } if(item==2){ giveequipment(~Jade Machine+~[;] true[;] false[;] e); } if(item==3){ giveequipment(~Jade Blade+~[;] true[;] false[;] e); } if(item==4){ giveequipment(~Jade Skull+~[;] true[;] false[;] e); } if(item==5){ giveequipment(~Jade Pendant+~[;] true[;] false[;] e); } if(item==6){ giveequipment(~Jade Clock+~[;] true[;] false[;] e); },Magic Six,NORMAL|NORMAL|NORMAL|FREE4,16,MAGIC,BLACK,,,,useitem,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Vault_downgraded,Contains a slightly less | powerful item,2,var item=actualdice[0].basevalue; if(item==1){ giveequipment(~Jade Calculator-~[;] true[;] false[;] e); } if(item==2){ giveequipment(~Jade Machine-~[;] true[;] false[;] e); } if(item==3){ giveequipment(~Jade Blade-~[;] true[;] false[;] e); } if(item==4){ giveequipment(~Jade Skull-~[;] true[;] false[;] e); } if(item==5){ giveequipment(~Jade Pendant-~[;] true[;] false[;] e); } if(item==6){ giveequipment(~Jade Clock-~[;] true[;] false[;] e); },Magic Six,NORMAL|NORMAL|NORMAL|NORMAL,21,MAGIC,BLACK,,,,useitem,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Calculator,Bump unused dice[;] twice | [grey](Vault relocks after combat),2,var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 5){ extradice.push(1); if(mydice.basevalue >= 6){ extradice.push(1); } mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 2)[;] self.screenposition()[;] c * 0.05); } c++; } } givedice(extradice);,Megabump,NORMAL,,ITEMS,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Calculator_downgraded,Bump unused dice  | [grey](Vault relocks after combat),2,var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 6){ extradice.push(1); mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 1)[;] self.screenposition()[;] c * 0.05); } c++; } } givedice(extradice);,Megabump,NORMAL,,ITEMS,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,
Jade Calculator_upgraded,Bump unused dice twice[;]|Return this dice | [grey](Vault relocks after combat),2,var c = 0; var extradice = [d]; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 5){ extradice.push(1); if(mydice.basevalue >= 6){ extradice.push(1); } mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 2)[;] self.screenposition()[;] c * 0.05); } c++; } } givedice(extradice);,Megabump,NORMAL,,ITEMS,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Machine,Duplicate dice | [grey](Vault relocks after combat),2,givedice([actualdice[0].basevalue[;]actualdice[0].basevalue[;]actualdice[1].basevalue[;]actualdice[1].basevalue]),Cloning Device,NORMAL|NORMAL,,ITEMS,GREEN,change_power,change_power,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Machine_upgraded,Duplicate dice | [grey](Vault relocks after combat),2,givedice([actualdice[0].basevalue[;]actualdice[0].basevalue[;]actualdice[1].basevalue[;]actualdice[1].basevalue[;]actualdice[2].basevalue[;]actualdice[2].basevalue]),Cloning Device,NORMAL|NORMAL|NORMAL,,ITEMS,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,
Jade Machine_downgraded,Duplicate dice | [grey](Vault relocks after combat),2,givedice([actualdice[0].basevalue[;]actualdice[0].basevalue[;]actualdice[1].basevalue[;]actualdice[1].basevalue]),Cloning Device,MAX3|MIN4,,ITEMS,GREEN,,,,,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Skull,[curse]Curse enemy[;] | [weaken]Weaken all equipment | [grey](Vault relocks after combat),2,inflict(WEAKEN[;]ALL); inflict(CURSE[;]1);,Dramatic Pause,COUNTDOWN,13,ITEMS,GREEN,change_countdown,change_power,,_curse,0,NO,NO,NO,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Skull_downgraded,[curse]Curse enemy | [grey](Vault relocks after combat),2,inflict(CURSE[;]1);,Dramatic Pause,COUNTDOWN,13,ITEMS,GREEN,,,,_curse,0,NO,NO,NO,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,
Jade Skull_upgraded,[curse]Curse enemy[;] | [weaken]Weaken all equipment | [grey](Vault relocks after combat),2,inflict(WEAKEN[;]ALL); inflict(CURSE[;]1);,Dramatic Pause,COUNTDOWN,10,ITEMS,GREEN,,,,_curse,0,NO,NO,NO,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Blade,Do [sword]<d6> damage [grey](Reusable) | [grey](Vault relocks after combat),2,attack(d);,Catapult,NORMAL,,WEAPON,GREEN,change_power,change_power,,_damage,-1,NO,NO,YES,YES,NO,NO,NO,YES,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Blade_upgraded,Do [sword]<d6> damage [grey](Reusable) | [grey](Vault relocks after combat),2,attack(d);,Catapult,NORMAL|FREE1,,WEAPON,GREEN,,,,_damage,-1,NO,NO,YES,YES,NO,NO,NO,YES,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,
Jade Blade_downgraded,Do [sword]<d6>-1 damage [grey](Reusable) | [grey](Vault relocks after combat),2,attack(d-1);,Catapult,MIN2,,WEAPON,GREEN,,,,_damage,-1,NO,NO,YES,YES,NO,NO,NO,YES,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Pendant,[recycle]Re-Equip[] next card[;]| gain [fury]Fury | [grey](Vault relocks after combat),2,inflictself(FURY); inflictself(REEQUIPNEXT);,Fury,DOUBLES|DOUBLES,,ITEMS,GREEN,change_power,change_power,,_fury,0,YES,NO,NO,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Pendant_upgraded,[recycle]Re-Equip[] next card[;]| gain [fury]Fury | [grey](Vault relocks after combat),2,inflictself(FURY); inflictself(REEQUIPNEXT);,Fury,NORMAL|NORMAL,7,ITEMS,GREEN,,,,_fury,0,YES,NO,NO,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Pendant_downgraded,Gain [fury]Fury | [grey](Vault relocks after combat),2,inflictself(FURY);,Fury,DOUBLES|DOUBLES,,ITEMS,GREEN,,,,_fury,0,YES,NO,NO,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Pendant?,[recycle]Keep[] next dice used[;]| gain [fury]Fury | [grey](Vault relocks after combat),2,inflictself(FURY); inflictself(REEQUIPNEXT);,Fury,DOUBLES|DOUBLES,,ITEMS,GREEN,change_countdown,change_power,,_fury,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Pendant?_upgraded,[recycle]Keep[] next dice used[;]| gain [fury]Fury | [grey](Vault relocks after combat),2,inflictself(FURY); inflictself(REEQUIPNEXT);,Fury,NORMAL|NORMAL,7,ITEMS,GREEN,,,,_fury,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Pendant?_downgraded,Gain [fury]Fury | [grey](Vault relocks after combat),2,inflictself(FURY);,Fury,DOUBLES|DOUBLES,,ITEMS,GREEN,,,,_fury,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Clock,Take an [confuse]Extra_Turn[][;]| relock vault | [grey](Vault relocks after combat),2,inflictself(EXTRATURN); giveequipment(~Jade Vault~[;] true[;] false[;] e);,Time Stop,COUNTDOWN,30,MAGIC,GREEN,change_countdown,change_power,,useitem,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Clock_upgraded,Take an [confuse]Extra_Turn[][;]| relock vault | [grey](Vault relocks after combat),2,inflictself(EXTRATURN); giveequipment(~Jade Vault~[;] true[;] false[;] e);,Time Stop,COUNTDOWN,25,MAGIC,GREEN,,,,useitem,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Clock_downgraded,Redo this turn[;] relock vault | [grey](Vault relocks after combat),2,undoturn(); inflictself(EXTRATURN); self.endturnnow(); giveequipment(~Jade Vault~[;] true[;] false[;] e);,Time Stop,COUNTDOWN,30,MAGIC,GREEN,,,,useitem,0,YES,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,e.preventdefault = true; e.maintainfury = true;
Jade Skull?,[curse]Curse enemy[;] | apply 3 [weaken]Weaken | [grey](Vault relocks after combat),2,inflict(WEAKEN[;]3); inflict(CURSE[;]1);,Dramatic Pause,COUNTDOWN,13,ITEMS,GREEN,change_power,change_power,,_curse,0,NO,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
Jade Skull?_downgraded,[curse]Curse enemy | [grey](Vault relocks after combat),2,inflict(CURSE[;]1);,Dramatic Pause,COUNTDOWN,13,ITEMS,GREEN,,,,_curse,0,NO,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault+~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault+~[;] true[;] false[;] e); },,,,,,
Jade Skull?_upgraded,[curse]Curse enemy[;] | inflict 5 [weaken]Weaken | [grey](Vault relocks after combat),2,inflict(WEAKEN[;]5); inflict(CURSE[;]1);,Dramatic Pause,COUNTDOWN,13,ITEMS,GREEN,,,,_curse,0,NO,NO,YES,YES,NO,NO,NO,NO,,,giveequipment(~Jade Vault~[;] true[;] false[;] e);,,//if(turn == 1) { e.animate(~flashandshake~); sfx(~_lock~); giveequipment(~Jade Vault~[;] true[;] false[;] e); },,,,,,
I'm Outta Here!,Odd: flee[;] Even: win|(for testing only),1,if(d%2 == 0){ attack(999); sfx(~_shield~); } else { flee(); sfx(~_shield~); },Broken Gadget,NORMAL,,ITEMS,BLACK,add1,complicate,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,,,,,,,
Optimise,CPU -7|[gray](Reuseable),2,adjustrobotcounter(-7);,Robot Roll,NORMAL|NORMAL,7,ITEMS,GRAY,reducesize,change_power,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Optimise_weakened,CPU -7|[gray](Reuseable),1,adjustrobotcounter(-7);,Robot Roll,NORMAL|NORMAL,9,ITEMS,GRAY,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Optimise_downgraded,CPU -7|[gray](Reuseable),2,adjustrobotcounter(-7);,Robot Roll,NORMAL|NORMAL,9,ITEMS,GRAY,,,,none,-1,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
All Out Attack,Throw your dice[;]| do [sword]2 damage for each,2,for(mydice in self.dicepool){ if(mydice.available()){ mydice.removedice(self.screenposition()); attack(2); } },Throw Dice,NORMAL,,WEAPON,PURPLE,change_power,change_power,,_damage,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
All Out Attack_upgraded,Throw your dice[;]| do [sword]2 damage for each | ([sword]3 on [dice]>3),2,var dmg=0; for(mydice in self.dicepool){ if(mydice.available()){ if(mydice.basevalue>=4){ dmg=3; }else{ dmg=2; } mydice.removedice(self.screenposition()); attack(dmg); } },Throw Dice,NORMAL,,WEAPON,PURPLE,,,,_damage,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
All Out Attack_downgraded,Throw your dice[;] do [sword]1 damage for each,2,for(mydice in self.dicepool){ if(mydice.available()){ mydice.removedice(self.screenposition()); attack(1); } },Throw Dice,NORMAL,,WEAPON,PURPLE,,,,_damage,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
High Stakes,Double Down|Duplicate an unused dice[;]|CPU +[dice],2,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available()){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); givedice(dicelist[0].basevalue); attack(d); adjustrobotcounter(dicelist[0].basevalue); },Replicate,,,BACKUP,WHITE,none,noeffect,,none,0,YES,NO,NO,YES,NO,NO,NO,NO,,,,,e.animate(~flashandshake~); e.availablethisturn = false;,if( e.availablethisturn == false){ e.animate(~flashandshake~); e.availablethisturn = true; },,,,,
High Stakes?,All In|Roll three extra dice...,2,var douses = [rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])[;]rand([1[;]2[;]3[;]4[;]5[;]6])]; givedice(douses); adjustrobotcounter(douses[0]+douses[1]+douses[2]); adjustrobotcounter(-(douses[0]+douses[1]+douses[2]));,Crystal Ball,,,BACKUP,WHITE,none,noeffect,,none,0,YES,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Cataclysm,Do [sword]<d6> damage[;]|Add <d6> random status,2,attack(d); var status = shuffle([BLIND[;]CURSE[;]LOCK[;]FIRE[;]ICE[;]WEAKEN[;]SHOCK[;]POISON[;]CONFUSE[;]VANISH]); for(i in 1 ... d){ inflict(status(i)[;]1); },Broken Gadget,REQUIRE6,,WEAPON,RED,add1,change_power,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Cataclysm_downgraded,Do [sword]<slotdoubles> damage[;]|Add <doubles> random status,2,attack(d); var status = shuffle([BLIND[;]CURSE[;]LOCK[;]FIRE[;]ICE[;]WEAKEN[;]SHOCK[;]POISON[;]CONFUSE[;]VANISH]); for(i in 1 ... (d)){ inflict(status(i)[;]1); },Broken Gadget,REQUIRE6|REQUIRE6,,WEAPON,RED,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Misfortune,Luck was never|on your side.,2,givedice([6[;]6]);,Broken Gadget,REQUIRE6|REQUIRE6,,ITEMS,WHITE,change_power,noeffect,,_damage,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Misfortune_upgraded,Luck was never|on your side.,2,givedice([6[;]6]);,Broken Gadget,REQUIRE6|REQUIRE6,,ITEMS,WHITE,,,,none,0,NO,NO,YES,YES,NO,NO,NO,NO,,,,,,,,,,,
Combat Roll@SDD,Reroll dice with lower value|[gray](Reuseable),2,var outcome = []; for(i in 1 ... d) { outcome.push(i); } if(d<=1){ givedice(1); }else{ givedice(rand(outcome)); },Random Roll,MIN2,,SKILLCARD,GRAY,,,,,3,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Bump,Dice value +1|[gray](Reuseable),2,if(d >= 6){ givedice([6[;] 1]); } else { givedice(d + 1); },Megabump,NORMAL,,SKILLCARD,GRAY,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Nudge,Dice value -1|[gray](Reuseable),2,givedice(d - 1);,Meganudge,MIN2,,SKILLCARD,GRAY,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Doppel,Double dice value |[grey](Reuseable),2,givedice(d * 2[;] ~combinedice~);,Unfocused,MAX3,,SKILLCARD,GRAY,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Lock,Split dice|(Reuseable),2,givedice(split(d)[;] ~splitdice~);,Magic Lockpick,MIN2,,SKILLCARD,GRAY,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Key,Set an unused dice to <d6>[;]|Return this dice|(Reuseable),2,var dicelist = []; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue != d){ dicelist.push(mydice); } } if(dicelist.length > 0) { shuffle(dicelist); dicelist[0].animatereroll(d[;] self.screenposition()[;] 0); } givedice(d);,Reversal,NORMAL,,SKILLCARD,GRAY,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Spanner,Combine dice | (Reuseable),2,if(d > 0) givedice(d[;] ~combinedice~);,Magic Spanner,MAX3|MAX3,,SKILLCARD,GRAY,,,,,2,YES,NO,NO,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Combat Spatula@SDD,Flip a dice upside down|[gray](Reuseable),2,givedice(7 - d);,Megaflip,NORMAL,,SKILLCARD,GRAY,,,,,2,YES,NO,YES,NO,NO,NO,NO,NO,,,,,var give = []; if(chance(25)){ give = shuffle([~Combat Key~[;]~Combat Lock~[;]~Combat Doppel~[;]~Combat Spanner~]); } else{ give=shuffle([~Combat Roll@SDD~[;]~Combat Spatula@SDD~[;]~Combat Bump~[;]~Combat Nudge~]); } self.replaceskillcard(give[0]);,,,,,,
Aattest,(testing only),1,self.replaceskillcard(~Inspire~);,Broken Gadget,NORMAL,,ITEMS,BLACK,,,,none,8,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Redeal,REDEAL|Refill your inventory with|Random Equipment,2,var eqlist = []; for(eq in self.equipment){ if(eq.skillcard == ~~ && !eq.ready ){ trace(eq.name + eq.size); eqlist.push(eq.size); } } var neweq = ~~; for(size in eqlist){ if(size == 2) { neweq = rand(getparticularequipment([~large~])); } else { neweq = rand(getparticularequipment([~small~])); } giveequipment(neweq); },Reversal,,,BACKUP,RED,,,,useitem,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Drake@nospace,Flee|Please re-enter this combat with|room for another big item,2,self.replaceskillcard(self.getvar(~oldskillcard~)); flee();,Broken Gadget,,,BACKUP,BLACK,,,,useitem,-1,YES,NO,YES,YES,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Drake@havespace,Give Bullet|Obtain a Silver Bullet[;]|Restore old skill card,2,giveequipment(~Silver Bullet~[;]true[;]false); self.setvar(~hasbullet~[;]true); self.replaceskillcard(self.getvar(~oldskillcard~));,Broken Gadget,,,BACKUP,BLACK,,,,useitem,-1,YES,NO,YES,YES,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Drake@havespacet,SPACE|Restore your Skill Card|(this should not appear),2,self.replaceskillcard(self.getvar(~oldskillcard~));,Broken Gadget,,,BACKUP,BLACK,,,,useitem,-1,YES,NO,YES,YES,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Drake@nospacet,NOSPACE|Restore your Skill Card|(this should not appear),2,self.replaceskillcard(self.getvar(~oldskillcard~));,Broken Gadget,,,BACKUP,BLACK,,,,useitem,-1,YES,NO,YES,YES,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Silver Bullet,Do [sword]1 damage[;]|Can defeat a Vampire,2,if(target.hp <= 1 &&getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE[;] ALL); } attack(1);,Oh No!,DOUBLES|DOUBLES,,SHIELD,GRAY,reducesize,change_power,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Silver Bullet_downgraded,Do [sword]1 damage[;]|Can defeat a Vampire,2,if(target.hp <= 1 &&getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE[;] ALL); } attack(1);,Oh No!,NORMAL|NORMAL,11,SHIELD,GRAY,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Silver Bullet_weakened,Do [sword]1 damage[;]|Can defeat a Vampire,1,if(target.hp <= 1 &&getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE[;] ALL); } attack(1);,Oh No!,NORMAL|NORMAL,10,SHIELD,GRAY,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Silver Bullet_deckupgrade,Do [sword]1 damage[;]|Can defeat a Vampire,2,if(target.hp <= 1 &&getstatus(VAMPIRE) > 0) { removestatus(VAMPIRE[;] ALL); } attack(1);,Oh No!,EVEN,,SHIELD,GRAY,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Flash Drive,[]+2 CPU this combat,1,if(self.roll_target<=19){ self.roll_target += 2; } else{ self.roll_target = 21; },Robot Roll,REQUIRE6,,MAGIC,PURPLE,simplify,double_requirements,,useitem,0,NO,NO,YES,NO,NO,NO,NO,NO,,var oldrolltotal = self.roll_target,self.roll_target = oldrolltotal,,,,,,,,
Inspired,INSPIRATION|Delete the first card|in your hand this combat,2,var list = self.getvar(~inspired~); var firstcard = Deck.getcard(0); if(firstcard != null){ trace(firstcard.name); list.append(firstcard.name); self.setvar(~inspired~[;]list); firstcard.delete(); },Reversal,,,BACKUP,GRAY,,,,useitem,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Borrow,YOINK|Borrow equipment,2,self.replaceskillcard(rand(getequipment(target)));,Reversal,,,BACKUP,GREEN,,,,useitem,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Blowtorch,Do [fire]3 fire damage,2,attack(3[;]FIRE);,Broken Gadget,,,BACKUP,RED,,,,_fire,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Refrigerator,Freeze [ice]1 dice,2,inflict(ICE);,Broken Gadget,,,BACKUP,BRIGHTCYAN,,,,_ice,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Jackhammer,Shock [shock]3 equipment,2,inflict(SHOCK[;]3);,Broken Gadget,,,BACKUP,YELLOW,,,,_shock,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Megabump,[]+1 to all dice,2,var c = 0; var extradice = []; for (mydice in self.dicepool){ if (mydice.available()){ if (mydice.basevalue >= 6){ extradice.push(1); mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); } else { mydice.animatereroll((mydice.basevalue + 1)[;] self.screenposition()[;] c * 0.05); } c++; } } givedice(extradice);,Broken Gadget,,,BACKUP,GREEN,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Barricade,Shield +[shield]3,2,inflictself(SHIELD[;]3);,Broken Gadget,,,BACKUP,GRAY,,,,_shield,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Protection,Reduce damage by [reduce]1,2,inflictself(REDUCE);,Broken Gadget,,,BACKUP,ORANGE,,,,_shield,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Prep,PREPARE|Become a copy of the|third card in your hand,2,var c = Deck.getcard(2); trace(c); trace(c.name); trace(c.equipment.name); //todo,Broomstick,,,BACKUP,GRAY,,,,none,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Hammer@Crisis,Do [shock]<d6> damage[;]|on 6[;] inflict [shock]1 shock,1,attack(d[;] SHOCK); if(d == 6) inflict(SHOCK); if(d < 6) { sfxdamage(target[;]d); } else { sfxdamage(target[;]d); sfx(~_shock~[;]~~[;]0.2); },Jackhammer,NORMAL,,WEAPON,YELLOW,change_power,change_power,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hammer@Crisis_upgraded,Do [shock]<d6> damage|[shock]Shocks the enemy,1,attack(d[;] SHOCK); inflict(SHOCK);,Jackhammer,NORMAL,,WEAPON,YELLOW,,,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hammer@Crisis_downgraded,Do [shock]<d6> damage,1,attack(d[;] SHOCK);,Jackhammer,NORMAL,,WEAPON,YELLOW,,,,_shock,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Program,CALCULATE|CPU Target: <var:jpot>,2,var v = rand([1[;]2[;]3[;]4[;]5[;]6]); var c = ~cpu~; givedice(v); inflictself(c[;]v); if(getstatusself(c)==self.getvar(~jpot~)){ self.replaceskillcard(~Jackpot!~); sfx(~jackpot_autoroll~); }else{ if(getstatusself(c)>self.getvar(~jpot~)){ for(eq in self.equipment){ eq.animate(~error~); } }else{ self.replaceskillcard(~Program~); } },Robot Roll,,,BACKUP,WHITE,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,for(mydice in self.dicepool){ mydice.consumedice(); } var dtotal=self.dice+self.extradice+self.bonusdice; trace(dtotal); self.setvar(~jpot~[;]5+2*dtotal); trace(self.getvar(~jpot~)); if(getstatusself(SILENCE)>0){ removestatusself(SILENCE[;]ALL); } e.fulldescription = ~CALCULATE\n[cog]CPU target: ~ + self.getvar(~jpot~);,,,,,,
Sword@Crisis,Do [sword]<d6> damage,1,attack(d);,Plasma Gun,NORMAL,,WEAPON,RED,add1,decreaserange,,plasma,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Dagger@Crisis,Do [sword]<d6> damage|[gray](Reuseable),1,attack(d);,Steal,MAX3,,WEAPON,RED,add1,complicate,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Hocus Rocus,Copy your <d6>th equipment,2,var eqlist = []; for(eq in self.equipment){ if(eq.skillcard == ~~ ){ trace(eq.name + eq.namemodifier); eqlist.push(eq.name + eq.namemodifier); } } trace(eqlist.length); if(eqlist.length<d){ givedice(d); self.textparticle(~Dice Doesn't Fit!~); } else{ self.replaceskillcard(eqlist[d-1]); },Reversal,NORMAL,,SKILLCARD,PURPLE,,,,useitem,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Inspire,REWORK|Disable one of your equipment[;]|get a gadget from it,2,var gadgets = [~Barricade~[;]~Flash Freeze~[;]~Blowtorch~[;]~Megabump~[;]~Jackhammer~[;]~Stardust~[;]~Arctic Storm~[;]~Power Up~[;]~Refrigerator~[;]~Protection~[;]~Dramatic Pause~[;]~Stardust~]; var eqlist = []; for(eq in self.equipment){ if(eq.skillcard == ~~ && eq.ready ){ trace(eq.name + eq.equipmentcol); eqlist.push(eq); } } eqlist=shuffle(eqlist); if(eqlist.length>0){ trace(eqlist[0].equipmentcol); eqlist[0].availablethisturn=false; self.replaceskillcard(gadgets[eqlist[0].equipmentcol]); }else{ self.textparticle(~No effect!~); },Reversal,,,BACKUP,ORANGE,,,,useitem,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Jackpot!,LUCKY SHOT|Deal 5 damage,2,attack(5);,Plasma Gun,,,BACKUP,YELLOW,,,,plasma,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Dramatic Pause,Curse the enemy,2,inflict(CURSE[;] 1);,Broken Gadget,,,BACKUP,BLACK,,,,_curse,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Magic Six,Roll a six,2,givedice(6);,Broken Gadget,,,BACKUP,PINK,,,,,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Stardust,Random status effect,2,inflict(rand([CURSE[;] LOCK[;] FIRE[;] ICE[;] WEAKEN[;] SHOCK[;] POISON]));,Broken Gadget,,,BACKUP,PURPLE,,,,useitem,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Flash Freeze,Do [ice]4 ice damage,2,attack(4[;] ICE);,Broken Gadget,,,BACKUP,CYAN,,,,_freeze,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Power Up,Gain a random blessing,2,var randomstatus = rand([SHIELD[;]FURY[;]REDUCE[;]REEQUIPNEXT[;]DODGE]); var a = 1; if (randomstatus == SHIELD) a = 4; if (randomstatus == REDUCE) a = 2; inflictself(randomstatus[;] a);,Broken Gadget,,,BACKUP,WHITE,,,,useitem,-1,YES,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,e.preventdefault = true; e.maintainfury = true;
Arctic Storm,Freeze a random amount,2,var r = rand([1[;]1[;]1[;]1[;]2[;]2[;]2[;]3[;]3[;]4[;]5]); inflict(ICE[;] r);,Broken Gadget,,,BACKUP,BLUE,,,,_freeze,-1,NO,NO,NO,NO,NO,NO,NO,YES,,,,,,,,,,,
Kapow!,Do [sword]<var_tempkapowkludge:kapowcount> damage[;] +1 for|each use this turn [grey](Reuseable),1,attack(self.getvar(~kapowcount~) + 1); self.setvar(~kapowcount~[;] self.getvar(~kapowcount~) + 1);,Pea Gun,NORMAL,,MAGIC,YELLOW,change_power,change_power,,_damage,3,NO,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,,,,,,,
Kapow!_upgraded,Do [sword]<var_tempkapowkludge:kapowcount> damage[;] +2 for|each use this turn [grey](Reuseable),1,attack((self.getvar(~kapowcount~) * 2) + 1); self.setvar(~kapowcount~[;] self.getvar(~kapowcount~) + 1);,Pea Gun,NORMAL,,MAGIC,YELLOW,,,,_damage,3,NO,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,,,,,,,
Kapow!_downgraded,Do [sword]1 damage[;]|return to normal,1,Attack(1); giveequipment(~Kapow!~[;]true[;]false[;]e);,Pea Gun,NORMAL,,MAGIC,YELLOW,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,,,,,,,e.preventdefault = true; e.maintainfury = true;
Kapow!_weakened,Do [sword]1 damage[;]|return to normal,1,Attack(1); giveequipment(~Kapow!+~[;]true[;]false[;]e);,Pea Gun,NORMAL,,MAGIC,YELLOW,,,,_damage,0,NO,NO,YES,NO,NO,NO,NO,NO,,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,self.setvar(~kapowcount~[;] 0);,,,,,,,e.preventdefault = true; e.maintainfury = true;
Bop!,Do [sword]3 damage|[grey](Reuseable),1,attack(3); if(!simulation){ self.setvar(~bopcount~[;] self.getvar(~bopcount~) + 1); },Pea Gun,MIN3,,MAGIC,,change_power,change_power,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~bopcount~[;] 0);,self.setvar(~bopcount~[;] 0);,,,,,,,,
Bop!_upgraded,Do [sword]4 damage|[grey](Reuseable),1,Attack(4); if(!simulation){ self.setvar(~bopcount~[;] self.getvar(~bopcount~) + 1); },Pea Gun,MIN3,,MAGIC,,,,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~bopcount~[;] 0);,self.setvar(~bopcount~[;] 0);,,,,,,,,
Bop!_downgraded,Do [sword]2 damage|[grey](Reuseable),1,attack(2); if(!simulation){ self.setvar(~bopcount~[;] self.getvar(~bopcount~) + 1); },Pea Gun,MIN3,,MAGIC,,,,,_damage,3,NO,NO,NO,NO,NO,NO,NO,NO,,self.setvar(~bopcount~[;] 0);,self.setvar(~bopcount~[;] 0);,,,,,,,,
Candy,Heal [heal]2. If above max hp[;]|convert excess to shield,1,if(self.maxhp - self.hp == 0) { inflictself(SHIELD[;] 2); sfx(~_shield~[;]~~[;]0.2); } else if(self.maxhp - self.hp == 1) { inflictself(SHIELD[;] 1); attackself(-1); sfx(~_shield~[;]~~[;]0.2); } else { attackself(-2); sfx(~_heal~); },Regenerate,NORMAL,,ITEM,GREEN,change_power,change_power,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Candy_upgraded,Heal [heal]3. If above max hp[;]|convert excess to shield,1,if(self.maxhp - self.hp == 0) { inflictself(SHIELD[;] 3); sfx(~_shield~[;]~~[;]0.2); } else if(self.maxhp - self.hp == 1) { inflictself(SHIELD[;] 2); attackself(-1); sfx(~_shield~[;]~~[;]0.2); } else if(self.maxhp - self.hp == 3) { inflictself(SHIELD[;] 1); attackself(-2); sfx(~_shield~[;]~~[;]0.2); } else { attackself(-3); sfx(~_heal~); },Regenerate,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Candy_downgraded,Heal [heal]1 health,1,attackself(-1);,Regenerate,NORMAL,,ITEM,GREEN,,,,none,0,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
C4,In [jinx]<d6> turns[;]|do [fire]<triple> damage,2,if(simulation){ bonus(100*d); }else{ jinx(~C4~[;]~take [fire]%VAR% damage~[;]~Take [fire]%VAR% damage~[;]~attack(%VAR%[;]FIRE); sfxdamage(null[;]%VAR%);~[;]target[;]self[;]d[;](d * 3)); sfx(~_thinghappens~); },Blowtorch,MAX4,,ITEM,PURPLE,change_power,change_power,,_fire,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
C4_upgraded,In [jinx]<d6> turns[;]|do [fire]<triple> damage,2,if(simulation){ bonus(100*d); }else{ jinx(~C4~[;]~take [fire]%VAR% damage~[;]~Take [fire]%VAR% damage~[;]~attack(%VAR%[;]FIRE); sfxdamage(null[;]%VAR%);~[;]target[;]self[;]d[;](d * 3)); sfx(~_thinghappens~); },Blowtorch,NORMAL,,ITEM,PURPLE,,,,_fire,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
C4_downgraded,In [jinx]<d6> turns[;]|do [fire]<triple> damage,2,if(simulation){ bonus(50*d); }else{ jinx(~C4~[;]~take [fire]%VAR% damage~[;]~Take [fire]%VAR% damage~[;]~attack(%VAR%[;]FIRE); sfxdamage(null[;]%VAR%);~[;]target[;]self[;]d[;](d * 3)); sfx(~_thinghappens~); },Blowtorch,MAX2,,ITEM,PURPLE,,,,_fire,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blast Shield,Gain [shield]<d6> shield[;]|+2 for each bomb,2,if(simulation){ bonus(d*10); }else{ var jinxcount = getjinx(target); inflictself(SHIELD[;]d+jinxcount*2); },Barricade,NORMAL,,SHIELD,PINK,change_power,change_power,,_shield,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blast Shield_upgraded,Gain [shield]<d6> shield[;]|+3 for each bomb,2,if(simulation){ bonus(d*10); }else{ var jinxcount = getjinx(target); inflictself(SHIELD[;]d+jinxcount*3); },Barricade,NORMAL,,SHIELD,PINK,,,,_shield,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Blast Shield_downgraded,Gain [shield]2 shield[;]|+2 for each bomb,2,if(simulation){ bonus(10); }else{ var jinxcount = getjinx(target); inflictself(SHIELD[;]2+jinxcount*2); },Barricade,NORMAL,,SHIELD,PINK,,,,_shield,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
THERE!,Reduce bomb countdowns|by 2,2,if(simulation){ bonus(20); }else{ boostjinxcountdowns(target[;] 2); },Accelerate,COUNTDOWN,16,MAGIC,PURPLE,change_power,change_power,,useitem,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
THERE!_upgraded,Reduce bomb countdowns|by 3,2,if(simulation){ bonus(20); }else{ boostjinxcountdowns(target[;] 3); },Accelerate,COUNTDOWN,16,MAGIC,PURPLE,,,,useitem,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
THERE!_downgraded,Reduce bomb countdowns|by 1,2,if(simulation){ bonus(20); }else{ boostjinxcountdowns(target[;] 1); },Accelerate,COUNTDOWN,16,MAGIC,PURPLE,,,,useitem,0,NO,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Combat Roll@Disguise,Reroll a dice|[gray](Reuseable),2,givedice();,Random Roll,NORMAL,,ITEM,CYAN,,,,,3,YES,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Sludge,Apply 1 [poison]Poison[;]|Reroll with lower value,1,inflict(POISON[;]1); var outcome = []; for(i in 1 ... d) { outcome.push(i); } givedice(rand(outcome));,Poison Arrow,MIN3,,ITEM,GREEN,change_power,change_power,,_poison,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Sludge_upgraded,Apply 1 [poison]Poison[;]|Reroll with lower value,1,inflict(POISON[;]1); var outcome = []; for(i in 1 ... d) { outcome.push(i); } givedice(rand(outcome));,Poison Arrow,MIN2,,ITEM,GREEN,,,,_poison,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Toxic Sludge_downgraded,Apply 1 [poison]Poison[;]|Reroll with lower value,1,inflict(POISON[;]1); var outcome = []; for(i in 1 ... d) { outcome.push(i); } givedice(rand(outcome));,Poison Arrow,MIN5,,ITEM,GREEN,,,,_poison,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Corrosion,[weaken]Disable 1 equipment,2,if(self.name==~Drain monster~){ inflict(~corrosion~); }else{ inflict(WEAKEN); },Mumble,REQUIRE1,,ITEM,GRAY,change_power,noeffect,,_weaken,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Corrosion_upgraded,[weaken]Disable 1 equipment|[gray](Reuseable),2,if(self.name==~Drain monster~){ inflict(~corrosion~); }else{ inflict(WEAKEN); },Mumble,REQUIRE1,,ITEM,GRAY,,,,_weaken,2,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Strange Ooze,Inflict a random status[;]|Reroll with higher value,1,var randstatus = rand([BLIND[;]CURSE[;]LOCK[;]FIRE[;]ICE[;]WEAKEN[;]SHOCK[;]POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()[;]~~[;]0.2); if(d == 1) { givedice(rand([2[;]3[;]4[;]5[;]6])); } else if(d == 2) { givedice(rand([3[;]4[;]5[;]6])); } else if(d == 3) { givedice(rand([4[;]5[;]6])); } else if(d == 4) { givedice(rand([5[;]6])); } else if(d >= 5) { givedice(6); },Stardust,MAX2,,MAGIC,PINK,change_power,change_power,,useitem,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Strange Ooze_upgraded,Inflict a random status[;]|Reroll with higher value,1,var randstatus = rand([BLIND[;]CURSE[;]LOCK[;]FIRE[;]ICE[;]WEAKEN[;]SHOCK[;]POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()[;]~~[;]0.2); if(d == 1) { givedice(rand([2[;]3[;]4[;]5[;]6])); } else if(d == 2) { givedice(rand([3[;]4[;]5[;]6])); } else if(d == 3) { givedice(rand([4[;]5[;]6])); } else if(d == 4) { givedice(rand([5[;]6])); } else if(d >= 5) { givedice(6); },Stardust,MAX3,,MAGIC,PINK,,,,useitem,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Strange Ooze_downgraded,Inflict a random status[;]|Reroll with higher value,1,var randstatus = rand([BLIND[;]CURSE[;]LOCK[;]FIRE[;]ICE[;]WEAKEN[;]SHOCK[;]POISON]); inflict(randstatus); sfx(~_~ + randstatus.toLowerCase()[;]~~[;]0.2); if(d == 1) { givedice(rand([2[;]3[;]4[;]5[;]6])); } else if(d == 2) { givedice(rand([3[;]4[;]5[;]6])); } else if(d == 3) { givedice(rand([4[;]5[;]6])); } else if(d == 4) { givedice(rand([5[;]6])); } else if(d >= 5) { givedice(6); },Stardust,REQUIRE1,,MAGIC,PINK,,,,useitem,0,NO,NO,NO,NO,NO,NO,NO,NO,,,,,,,,,,,
Capture_downgraded,Trap the wild spell in slot <slotdoubles>,1,Spellbook.changespellflash(d|Spellbook.getunexpectedspell());,Stardust,DOUBLES|DOUBLES,,MAGIC,PINK,,,,useitem,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
Capture,Trap the wild spell in slot <d6>,1,Spellbook.changespellflash(d|Spellbook.getunexpectedspell());,Stardust,NORMAL,,MAGIC,PINK,change_power,change_power,,useitem,0,YES,NO,YES,NO,NO,NO,NO,NO,1,,,,,,,,,,
Capture_upgraded,Trap the wild spell in slot <d6>|Return the dice,1,Spellbook.changespellflash(d|Spellbook.getunexpectedspell()); givedice(d);,Stardust,NORMAL,,MAGIC,PINK,,,,useitem,0,YES,NO,YES,NO,NO,NO,NO,NO,,,,,,,,,,,
